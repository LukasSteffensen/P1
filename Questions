package Window;

import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Rectangle;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.image.BufferedImage;


public class Questions extends MouseAdapter {
    private int score = 0;
    public static int counter = 0;
    public static int correct = 0;
    private int playonce = 1;
    public static int wrong = 0;
    private int recentAnswer = 0;
    private Music music = new Music();
    Game game;
    Handler handler;
    public BufferedImage level = null;

    public Questions(Game game, Handler handler) {
        this.game = game;
        this.handler = handler;
    }

    public void mousePressed(MouseEvent e) {

        int mouseX = e.getX(); // it finds the position of x when clicking the mouse
        int mouseY = e.getY(); // it finds the position of y when clicking the mouse

        if (Game.paused == true) {
            if (counter == 0) {
                if (mouseOver(mouseX, mouseY, 325, 180, 250, 50)) { // when clicking The correct answer
                    counter++;
                    wrong++;
                    recentAnswer = 2;
                } else if (mouseOver(mouseX, mouseY, 325, 280, 250, 50)) { // when clicking the wrong answer
                    counter++;
                    wrong++;
                    recentAnswer = 2;
                } else if (mouseOver(mouseX, mouseY, 325, 380, 250, 50)) { // when clicking the wrong answer
                    counter++;
                    correct++;
                    recentAnswer = 1;
                }
            }
            if (counter == 1) {
                if (mouseOver(mouseX, mouseY, 325, 480, 250, 50)) { // when clicking "Continue"
                    counter++;
                    recentAnswer = 0;
                }
            }
            if (counter == 2) {
                if (mouseOver(mouseX, mouseY, 325, 180, 250, 50)) { // when clicking the wrong answer
                    counter++;
                    wrong++;
                    recentAnswer = 2;
                } else if (mouseOver(mouseX, mouseY, 325, 280, 250, 50)) { // when clicking The correct answer
                    counter++;
                    wrong++;
                    recentAnswer = 2;
                } else if (mouseOver(mouseX, mouseY, 325, 380, 250, 50)) { // when clicking the wrong answer
                    counter++;
                    correct++;
                    recentAnswer = 1;
                }
            }
            if (counter == 3) {
                if (mouseOver(mouseX, mouseY, 325, 480, 250, 50)) { // when clicking "Continue"
                    counter++;
                    recentAnswer = 0;
                }
            }
            if (counter == 4) {
                if (mouseOver(mouseX, mouseY, 325, 180, 250, 50)) { // when clicking the wrong answer
                    counter++;
                    wrong++;
                    recentAnswer = 2;
                } else if (mouseOver(mouseX, mouseY, 325, 280, 250, 50)) { // when clicking the wrong answer
                    counter++;
                    correct++;
                    recentAnswer = 1;
                } else if (mouseOver(mouseX, mouseY, 325, 380, 250, 50)) { // when clicking The correct answer
                    counter++;
                    wrong++;
                    recentAnswer = 2;
                }
            }
            if (counter == 5) {
                if (mouseOver(mouseX, mouseY, 325, 480, 250, 50)) { // when clicking "Continue"
                    Game.paused = false;
                    recentAnswer = 0;
                    Game.playOnce = 1;
                    playonce = 1;
                    music.stop();
                }
            }
        }
    }

    private boolean mouseOver(int mouseX, int mouseY, int x, int y, int width, int height) { // checks whether our mouse
        // coordinates is in the
        // same area as the
        // buttons
        if (mouseX > x && mouseX < x + width) {
            if (mouseY > y && mouseY < y + height) {
                return true; // when clicking the mouse, the x and y value are both within the button's
                // boundaries, and you will open up the button that you click on
            } else
                return false; // when clicking the mouse, the x value is inside the button's left and right
            // boundaries. However the y value is not - and nothing will happen
        } else
            return false; // when clicking the mouse, if the x value is not within the button's left and
        // right boundaries, nothing will happen
    }

    public void mouseReleased(MouseEvent e) {

    }

    public void tick() {

    }

    public void render(Graphics g) {

        Font hudMenu1 = new Font("gtubh", Font.ITALIC, 18); // title font
        Font hudMenu2 = new Font("gtubh", Font.ITALIC, 25); // subtitle/menu font

        if (Game.paused == true && counter < 6) {

            if(playonce == 1) {
                music.music("Music\\Quiz.wav");
                music.play();
                music.loop();
                playonce++;
            }

            g.setColor(Color.BLACK);
            g.fillRect(150, 50, 600, 500);

            if (recentAnswer == 1) { // if the most recent answer was correct, display the following
                g.setFont(hudMenu1);
                g.setColor(Color.GREEN);
                g.drawString("Good Job!", 160, 75);
                g.setColor(Color.white);
                g.drawString("You have " + correct + " correct answers.", 180, 125);
                g.drawString("You have " + wrong + " wrong answers.", 180, 150);
                g.drawString("Press \"Continue\" to continue", 180, 175);
                g.drawString("Continue", 335, 510);

                g.drawRect(325, 480, 250, 50);

            } else if (recentAnswer == 2) {  // if the most recent answer was wrong, display the following
                g.setFont(hudMenu1);
                g.setColor(Color.RED);
                g.drawString("Disappointed!", 160, 75);
                g.setColor(Color.white);
                g.drawString("You have " + correct + " correct answers.", 180, 125);
                g.drawString("You have " + wrong + " wrong answers.", 180, 150);
                g.drawString("Press \"Continue\" to continue", 180, 175);
                g.drawString("Continue", 335, 510);

                g.drawRect(325, 480, 250, 50);
            }

            if (counter == 0) { // The first question that also welcomes you to the questions
                g.setFont(hudMenu1);
                g.setColor(Color.white);
                g.drawString("Welcome to the Questions", 160, 75);
                g.drawString("Question 1: “Det konservative folkeparti” believes that", 160, 125);
                g.drawString("we are all free individuals, but they also belive that we are...? ", 160, 150);
                g.drawString("Idealist", 335, 210);
                g.drawString("Carefree", 335, 310);
                g.drawString("Responsible citizens", 335, 410);

                g.drawRect(325, 180, 250, 50);
                g.drawRect(325, 280, 250, 50);
                g.drawRect(325, 380, 250, 50);
            }

            if (counter == 2) { // The second question
                g.setFont(hudMenu1);
                g.setColor(Color.white);
                g.drawString("Question 2: Which ideology is  “Det konservative folkeparti” based on?", 160, 125);
                g.drawString("Liberalism", 335, 210);
                g.drawString("Conservatism", 335, 310);
                g.drawString("None", 335, 410);

                g.drawRect(325, 180, 250, 50);
                g.drawRect(325, 280, 250, 50);
                g.drawRect(325, 380, 250, 50);
            }
            if (counter == 4) { // The second question
                g.setFont(hudMenu1);
                g.setColor(Color.white);
                g.drawString("Question 3: How much does “Det konservative folkeparti” wants lower ", 160, 125);
                g.drawString("the taxes annually by 2020?", 160, 150);
                g.drawString("30 billion dkk", 335, 210);
                g.drawString("40 billion dkk", 335, 310);
                g.drawString("50 billion dkk", 335, 410);

                g.drawRect(325, 180, 250, 50);
                g.drawRect(325, 280, 250, 50);
                g.drawRect(325, 380, 250, 50);
            }
        }
    }
}
