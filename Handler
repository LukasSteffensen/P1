package Window;
import java.awt.Graphics;
import java.awt.image.BufferedImage;
import java.util.LinkedList;

import Framework.GameObject;
import Framework.ObjectId;
import Objects.*;


public class Handler {

    public LinkedList<GameObject> object = new LinkedList<GameObject>(); // creating a list of game objects that we can
    // render and update.
    private GameObject tempObject;
    private Camera cam;
    private Music music = new Music();
    private BufferedImage level2 = null, level3 = null;

    public Handler(Camera cam) {
        this.cam = cam;

        BufferedImageLoader loader = new BufferedImageLoader();
        level2 = loader.loadImage("/level2.png");
        level3 = loader.loadImage("/level3.png");

    }

    public void tick() { // Updates our objects in our list.
        for (int i = 0; i < object.size(); i++) {
            tempObject = object.get(i); // Sets our tempObject to what to object in our list is at that current time
            tempObject.tick(object);
        }
    }

    public void render(Graphics g) {
        for (int i = 0; i < object.size(); i++) {
            tempObject = object.get(i);
            tempObject.render(g);
        }
    }

    public void loadImageLevel(BufferedImage image) {
        int h = image.getHeight();
        int w = image.getWidth();

        System.out.println("width, height: " + w + " " + h);

        for (int xx = 0; xx < w; xx++) {
            for (int yy = 0; yy < h; yy++) { // loop trough every single pixel in the loaded image
                int pixel = image.getRGB(xx, yy);
                int red = (pixel >> 16) & 0xff;
                int green = (pixel >> 8) & 0xff;
                int blue = (pixel) & 0xff;
                // finds the RGB level of every pixel
                if (red == 255 && green == 255 && blue == 255)
                    addObject(new Block(xx * 32, yy * 32, 0, ObjectId.Block)); // replaces white pixels with dirt
                if (red == 64 && green == 64 && blue == 64)
                    addObject(new Block(xx * 32, yy * 32, 1, ObjectId.Block)); // replaces grey pixels with grass
                if (red == 0 && green == 255 && blue == 255)
                    addObject(new Block(xx * 32, yy * 32, 2, ObjectId.Block));
                if (red == 0 && green == 38 && blue == 255)
                    addObject(new Block(xx * 32, yy * 32, 3, ObjectId.Block)); //
                if (red == 178 && green == 0 && blue == 255)
                    addObject(new Block(xx * 32, yy * 32, 4, ObjectId.Block)); // replaces magenta pixels right end of
                // platform
                if (red == 125 && green == 0 && blue == 55)
                    addObject(new InfoBlock(xx * 32, yy * 32, 5, ObjectId.InfoBlock));
                if (red == 1 && green == 255 && blue == 255)
                    addObject(new GoToQuestions(xx * 32, yy * 32, 6, ObjectId.GoToQuestions));
                if (red == 255 && green == 216 && blue == 0)
                    addObject(new Coin(xx * 32, yy * 32, 7, ObjectId.Coin));
                if (red == 255 && green == 0 && blue == 0)
                    addObject(new DeathBlock(xx * 32, yy * 32, 8, ObjectId.DeathBlock));
                if (red == 0 && green == 255 && blue == 0)
                    addObject(new DeathBlock(xx * 32, yy * 32, 9, ObjectId.DeathBlock));
                if (red == 150 && green == 50 && blue == 50)
                    addObject(new Block(xx * 32, yy * 32, 11, ObjectId.Block));
                if (red == 10 && green == 200 && blue == 200){
                    addObject(new IceBlock(xx*32, yy*32, ObjectId.IceBlock));
                }

                if (red == 160 && green == 100 && blue == 37)
                    addObject(new SuperGoomba(xx * 32, yy * 32, 0, this, ObjectId.Enemy));
                if (red == 180 && green == 100 && blue == 37)
                    addObject(new Bullet(xx * 32, yy * 32, 0, this, ObjectId.Bullet));
                if (red == 125 && green == 55 && blue == 15)
                    addObject(new Goomba(xx * 32, yy * 32, 0, this, ObjectId.Enemy));

                if (red == 165 && green == 155 && blue == 0)
                    addObject(new SoerenPape(xx * 32, yy * 32, 0, this, ObjectId.Boss));
                if (red == 250 && green == 100 && blue == 0)
                    addObject(new PiaOlsen(xx * 32, yy * 32, 0, this, ObjectId.Boss1));
                if (red == 200 && green == 200 && blue == 0)
                    addObject(new LarsLoekke(xx * 32, yy * 32, 0, this, ObjectId.Boss2));

                if (red == 0 && green == 0 && blue == 255)
                    addObject(new Player(xx * 32, yy * 32, this, cam, ObjectId.Player));

                if (red == 0 && green == 127 && blue == 14)
                    addObject(new Flag(xx * 32, yy * 32, ObjectId.Flag));
            }
        }

    }

    public void switchLevel() {
        clearLevel();
        cam.setX(0);

        switch (Game.LEVEL) {
            case 1:
                loadImageLevel(level2);
                music.music("Music\\Boss.wav");
                music.play();
                music.loop();
                if(Game.bossHealth == 0){
                    music.stop();
                }
                break;
            case 2:
                loadImageLevel(level3);
                music.stop();
                break;
        }
    }

    public void clearLevel() {
        object.clear();
    }

    public void addObject(GameObject object) {
        this.object.add(object);
    }

    public void removeObject(GameObject object) {
        this.object.remove(object);
    }

}
