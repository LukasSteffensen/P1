package com.Lukas.Mario.platformer.objects;

import java.awt.Graphics;
import java.awt.Rectangle;
import java.util.LinkedList;
import java.util.Random;

import com.Lukas.Mario.Window.Game;
import com.Lukas.Mario.Window.Handler;
import com.Lukas.Mario.platformer.framework.GameObject;
import com.Lukas.Mario.platformer.framework.ObjectId;
import com.Lukas.Mario.platformer.framework.Texture;

public class SoerenPape extends GameObject {

	public static float width = 64, height = 128;

	private float gravity = 0.35f;
	private final float MAX_SPEED = 10;
	private double velX = -2;
	private Handler handler;
	Random r = new Random();

	Texture tex = Game.getInstance();

	public SoerenPape(float x, float y, int type, Handler handler, ObjectId id) {
		super(x, y, id);
		this.handler = handler;
	}

	public void tick(LinkedList<GameObject> object) {
		x += velX;
		y += velY;

		if (Game.bossHealth < 76) {
			int spawnb = r.nextInt(75);
			if (spawnb == 0) {
				handler.addObject(new Bullet((int) x + 48, (int) y + 48, 1, handler, ObjectId.Bullet));
			}
		}

		if (Game.boss2Health < 76 && Game.boss2Health > 50) {
			if (velX > 0) {
				velX = 4;
			} else if (velX < 0) {
				velX = -4;
			}

		}

		if (Game.bossHealth < 51 && Game.bossHealth > 25) {
			if (velX > 0) {
				velX = 4;
			} else if (velX < 0) {
				velX = -4;
			}

		}
		if (Game.bossHealth < 26) {
			if (velX > 0) {
				velX = 5;
			} else if (velX < 0) {
				velX = -5;
			}

		}

		if (falling || jumping) {
			velY += gravity;

			if (velY > MAX_SPEED) {
				velY = MAX_SPEED;
			}
		}

		if (x < 4064 || x > 4640) {
			reverse();
		}

		int jump = r.nextInt(50);
		if (jump == 0 && jumping == false) {
			velY += -10;
			jumping = true;
		}

		collision(object);
	}

	private void collision(LinkedList<GameObject> object) {
		for (int i = 0; i < handler.object.size(); i++) {
			GameObject tempObject = handler.object.get(i);

			if (tempObject.getId() == ObjectId.Block) {

				if (getBounds().intersects(tempObject.getBounds())) {
					y = tempObject.getY() - height;
					velY = 0;
					falling = false;
					jumping = false;
				} else {
					falling = true;
				}

				if (getBoundsLeft().intersects(tempObject.getBounds())) {
					x = tempObject.getX() + width + 2;
					reverse();
				}
				if (getBoundsRight().intersects(tempObject.getBounds())) {
					x = tempObject.getX() - width - 2;
					reverse();
				}
			}
			if (tempObject.getId() == ObjectId.DeathBlock) {

				if (getBounds().intersects(tempObject.getBounds())) {

					y = tempObject.getY() - height;
					falling = false;
				} else {
					falling = true;
				}

				if (getBoundsLeft().intersects(tempObject.getBounds())) {
					x = tempObject.getX() + width + 8;
					reverse();
				}

				if (getBoundsRight().intersects(tempObject.getBounds())) {
					x = tempObject.getX() - width - 8;
					reverse();
				}
			}
		}

	}

	public void reverse() { //Makes the character reverse its direction
		velX *= -1;
	}

	public void render(Graphics g) {

		g.drawImage(tex.boss[0], (int) x, (int) y, null); // The image of SÃ¸ren Pape
		g.drawRect((int) x + 16, (int) y, 32, 64); // 144-147 is the hitboxes of this boss, these will note be drawn in the final game.
		g.drawRect((int) x + 16, (int) y + 65, 32, 64);
		g.drawRect((int) x, (int) y + 20, 5, 96);
		g.drawRect((int) x + 59, (int) y + 20, 5, 96);

	}

	public Rectangle getBounds() {
		return new Rectangle((int) x + 16, (int) y + 64, 32, 64);
	}

	public Rectangle getBoundsTop() {
		return new Rectangle((int) x + 16, (int) y, 32, 64);
	}

	public Rectangle getBoundsRight() {
		return new Rectangle((int) x + 59, (int) y + 20, 5, 96);
	}

	public Rectangle getBoundsLeft() {
		return new Rectangle((int) x, (int) y + 20, 5, 96);
	}

}
