package com.Lukas.Mario.Window;

import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Rectangle;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.image.BufferedImage;

import com.Lukas.Mario.Window.Game.STATE;

public class Menu extends MouseAdapter {

	Game game;
	Handler handler;
	private BufferedImage level = null, InstructionsBackground = null, MenuBackground = null;

	public Menu(Game game, Handler handler) {
		this.game = game;
		this.handler = handler;
	}

	public void mousePressed(MouseEvent e) {

		int mouseX = e.getX(); // it finds the position of x when clicking the mouse
		int mouseY = e.getY(); // it finds the position of y when clicking the mouse

		if (game.state == STATE.MENU) {
			if (mouseOver(mouseX, mouseY, Game.WIDTH / 2 - 146, 200, 300, 82)) { // The game will start when clicking
																					// "Play"
				game.state = STATE.STORY;

				BufferedImageLoader loader = new BufferedImageLoader();
				level = loader.loadImage("/real_level.png"); // load the premade level

				handler.loadImageLevel(level);
			}

			if (mouseOver(mouseX, mouseY, Game.WIDTH / 2 - 146, 330, 300, 82)) { // When clicking "Instructions",
				game.state = STATE.INSTRUCTIONS;
			}

			if (mouseOver(mouseX, mouseY, Game.WIDTH / 2 - 146, 460, 300, 82)) {
				System.exit(1);
			}

		} else if (game.state == STATE.INSTRUCTIONS) {
			if (mouseOver(mouseX, mouseY, Game.WIDTH / 2 - 150, 430, 300, 82)) {
				game.state = STATE.MENU;
			}
		} else if (game.state == STATE.STORY) {
			if (mouseOver(mouseX, mouseY, Game.WIDTH / 2 - 150, 430, 300, 82)) {
				game.state = STATE.GAME;
			}
		}
	}

	private boolean mouseOver(int mouseX, int mouseY, int x, int y, int width, int height) { // checks whether our mouse
																								// coordinates is in the
																								// same area as the
																								// buttons
		if (mouseX > x && mouseX < x + width) {
			if (mouseY > y && mouseY < y + height) {
				return true; // when clicking the mouse, the x and y value are both within the button's
								// boundaries, and you will open up the button that you click on
			} else
				return false; // when clicking the mouse, the x value is inside the button's left and right
								// boundaries. However the y value is not - and nothing will happen
		} else
			return false; // when clicking the mouse, if the x value is not within the button's left and
							// right boundaries, nothing will happen
	}

	public void mouseReleased(MouseEvent e) {

	}

	public void tick() {

	}

	
	public Rectangle startButton = new Rectangle(Game.WIDTH / 2 - 150, 430, 300, 82);

	public void render(Graphics g) {
		Graphics2D g2d = (Graphics2D) g;

		Font hudMenu1 = new Font("gtubh", Font.ITALIC, 50); // title font
		Font hudMenu2 = new Font("gtubh", Font.ITALIC, 35); // subtitle/menu font

		if (game.state == STATE.MENU) {

			BufferedImageLoader loader = new BufferedImageLoader();
			MenuBackground = loader.loadImage("/Menu.png");

			for (int xx = 0; xx < MenuBackground.getWidth(); xx += MenuBackground.getWidth()) {
				g.drawImage(MenuBackground, xx, 0, null);
			}
		} else if (game.state == STATE.INSTRUCTIONS) {

			BufferedImageLoader loader = new BufferedImageLoader();
			InstructionsBackground = loader.loadImage("/Instructions.png");

			for (int xx = 0; xx < InstructionsBackground.getWidth(); xx += InstructionsBackground.getWidth()) {
				g.drawImage(InstructionsBackground, xx, 0, null);
			}

			g.setFont(hudMenu1); // we use this font
			g.setColor(Color.WHITE); // color of text

		} else if (game.state == STATE.STORY) {
			g.setColor(Color.white);
			g.drawString("Write story here", 100, 100);
			g.setFont(hudMenu2);
			g2d.draw(startButton);
			g.drawString("Play", Game.WIDTH / 2 - 40, 480);
		}

	}

}
